

trigger: none
#- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Install-Module -Name MicrosoftPowerBIMgmt -Force -AllowClobber
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/eramusreport.pbix'  # Replace with the actual path to your .pbix file
    artifact: 'pbixArtifact'
    publishLocation: 'pipeline'      
- task: DownloadPipelineArtifact@2
  inputs:
    artifact: 'pbixArtifact'
    targetPath: '$(Pipeline.Workspace)'   


- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $pbixFilePath = "$(System.DefaultWorkingDirectory)/eramusreport.pbix"
      # Check if the file exists
      if (-Not (Test-Path -Path $pbixFilePath)) {
        Write-Error "File not found: $filePath"
        exit 1
      }

      # Connect to Power BI using a service principal
      $DeploymentPrincipalAppId = "cdd1cb32-8cea-4768-b972-5f937c78cfe8"
      $DeploymentPrincipalAppSecret = "O.g8Q~xTDTFlObwGm75fqkRRIDLr8pNDp1I45crQ"
      $tenantID = "835f6712-aeca-416a-8b76-d4dad8d12381"

      $credentials = New-Object System.Management.Automation.PSCredential ($DeploymentPrincipalAppId, (convertto-securestring $DeploymentPrincipalAppSecret -asplaintext -force))
      Connect-PowerBIServiceAccount -ServicePrincipal -Credential $credentials -Tenant $tenantID

      $workspace = Get-PowerBIWorkspace -Name 'Erasmus_DevOps' 
      New-PowerBIReport -Path $pbixFilePath -Workspace $workspace -ConflictAction CreateOrOverwrite

      