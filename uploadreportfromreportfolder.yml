trigger: none
#- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  tenantId: '835f6712-aeca-416a-8b76-d4dad8d12381'  # Replace with your actual AD tenant ID
  clientId: 'cdd1cb32-8cea-4768-b972-5f937c78cfe8'  # Replace with your actual client ID
  clientSecret: ''  # Store this as a secret variable in Azure DevOps
  workspaceName: 'Erasmus_DevOps'  # Replace with your actual Power BI workspace name
  workspaceId : '17e6dcd9-6633-40e1-bb3a-274e5f1520d9'
  

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Install-Module -Name MicrosoftPowerBIMgmt -Force -AllowClobber
      Import-Module -Name MicrosoftPowerBIMgmt

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/Reports'  # Replace with the actual path to your .pbix files
    artifact: 'pbixArtifact'
    publishLocation: 'pipeline'

- task: DownloadPipelineArtifact@2
  inputs:
    artifact: 'pbixArtifact'
    targetPath: '$(Pipeline.Workspace)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Variables
      $tenantId = "$(tenantId)"
      $clientId = "$(clientId)"
      $clientSecret = "$(clientSecret)"
      $workspaceName = "$(workspaceName)"
      $workspaceid = "$(workspaceId)"
      $reportsPath = "$(System.DefaultWorkingDirectory)/Reports"

      
      # Ensure the Power BI Management module is imported
      Import-Module -Name MicrosoftPowerBIMgmt

      # Connect to Power BI using a service principal
      $credentials = New-Object System.Management.Automation.PSCredential ($clientId, (convertto-securestring $clientSecret -asplaintext -force))
      Connect-PowerBIServiceAccount -ServicePrincipal -Credential $credentials -Tenant $tenantId

      # Log the connection status
      if ($?) {
        Write-Output "Connected to Power BI Service Account successfully."
      } else {
        Write-Error "Failed to connect to Power BI Service Account."
        exit 1
      }

      # Get all .pbix files in the Reports directory
      $pbixFiles = Get-ChildItem -Path $reportsPath -Filter *.pbix

      # Upload PBIX files
      foreach ($pbixFile in $pbixFiles) {
        $filePath = $pbixFile.FullName
        Write-Output "Uploading report: $($pbixFile.Name)"
        try {
          #Import-PowerBIReport -WorkspaceId $workspaceName -Path $filePath -ConflictAction Overwrite
          New-PowerBIReport -Path $filePath -WorkspaceId $workspaceid -ConflictAction CreateOrOverwrite
          Write-Output "Uploaded report: $($pbixFile.Name)"
        } catch {
          Write-Error "Failed to upload report: $($pbixFile.Name). Error: $_"
          exit 1
        }
      }
